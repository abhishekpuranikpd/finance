generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PaymentStatus {
  PAID
  DUE
  OVERDUE
}

enum UserRole {
  SUPERADMIN
  STAFF
}

enum PaymentMode {
  CASH
  UPI
  BANK_TRANSFER
  OTHER
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String     @unique
  phone     String     @unique
  password  String
  role      UserRole   @default(STAFF)
  createdAt DateTime   @default(now())
  customers Customer[]
}

model Scheme {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  monthlyAmount Float
  totalMonths   Int
  createdAt     DateTime   @default(now())
  totalMembers  Int       // ðŸ”¥ removed "?"
  customers     Customer[]
  cardPrefix    String 
}
model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  phone     String?   @unique
  address   String?
  cardNo    String?
  email     String?
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  scheme    Scheme    @relation(fields: [schemeId], references: [id])
  schemeId  String    @db.ObjectId
  payments  Payment[]
  createdAt DateTime  @default(now())
}

model Payment {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  month       Int // 1 to 12 (or whatever is scheme.totalMonths)
  year        Int
  paymentDate DateTime? // nullable: if not paid yet
  amount      Float
  status      PaymentStatus @default(DUE)
  mode        PaymentMode?
  customer    Customer      @relation(fields: [customerId], references: [id])
  customerId  String        @db.ObjectId
}
